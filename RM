#! /bin/bash
#  Synopsis:     rm [-fir] file ...
#  Description:  A Safe rm (move file(s) to a tmp directory for later deletion).  Files in
#                the tmp directory that have not been accessed in N days are permantly deleted 
#                the next time the rm command is run.  
#                Options: -f  (force) Run "/bin/rm" instead of moving files to the tmpdir
#                         -i  interactive mode
#                         -r  move (recursively) a directory tree to the tmp directory
#                Caveat: mv fails if the filename matches a directory name in the $tmpdir directory.

#set -x
tmpdir=$HOME/.tmp
while getopts fir opt; do
        case $opt in
        f) force="-f";;
        i) interactive="-i";;
        r) recursive="-r";;
        \?) exit 1;;
        esac
done
shift `expr $OPTIND - 1`

if [ "$force" ]; then                             # Run /bin/rm if '-f' is specified!
	/bin/rm -f $interactive $recursive "$@";  # This is useful in shell functions
	exit $?                                   # when you want the real rm executable
fi


for file; do
        if [ -n "$interactive" ]; then
                echo -n "remove '${file}'? "
                read yn
                if [ "$yn" != "Y" -a "$yn" != "y" ]; then
                        continue
                fi
        fi
        if [ -d "$file" ]; then
                if [ -n "$recursive" ]; then
                        mv -f "$file" "$tmpdir" || retcode=2
                else
                        echo "$0: cannot remove '$file': Is a directory"
                        retcode=1
                fi
                continue
        elif [ ! -e "$file" ]; then
		echo "$0:  cannot remove '$file': No such file or directory"
		retcode=1
                continue
        fi
        bf=`basename "$file"`
        mv -f "$file" "$tmpdir"
        touch "$tmpdir/$bf";  # For post cleanup, $file will be deleted N days from today
done

# Prolog: Clean up files, permanently delete files after atime days have elapsed
{ find "$tmpdir" -type f -atime +7 -exec /bin/rm '{}' \;
  find "$tmpdir" -mindepth 1 -type d -exec rmdir '{}' \; 2>/dev/null 
} >/dev/null 2>&1 &

exit ${retcode:-0}
